{\rtf1\ansi\deff0\deflang2057\plain\fs24\fet1
{\fonttbl
{\f0\froman Arial;}
}
{\colortbl
;
\red255\green255\blue255;
\red212\green43\blue17;
\red247\green155\blue141;
\red241\green209\blue195;
\red0\green10\blue0;
}
{\info
{\createim\yr2022\mo11\dy15\hr0\min16}
}

\paperw11907\paperh16840\margl1800\margr1800\margt1440\margb1440
\slmult0\cbpat2\ltrpar\li0
{\cf1\cb2\fs20
Design Pattern
}
\par\pard\plain
\slmult0\cbpat3\ltrpar\li200
{\cb3\fs20
SOLID
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
S
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Single responsability
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
responsabilidade \u250\'3fnica, a classe deve ter somente um motivo para mudar
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
O
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Open-Closed Principle
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
aberto-fechado, as entidades devem estar abertas para extens\u227\'3fo, mas fechadas para modifica\u231\'3f\u227\'3fo
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
L
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Liskov Subtitution Principle
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
substitui\u231\'3f\u227\'3fo de Liskov, uma classe derivada deve ser substitu\u237\'3fvel por sua classe base
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
I
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Interface Segregation Principle
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
segrega\u231\'3f\u227\'3fo da Interface, uma classe n\u227\'3fo deve ser for\u231\'3fada a implementar interfaces e m\u233\'3ftodos que n\u227\'3fo ir\u227\'3fo utilizar
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
D
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Dependency Inversion Principle
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
invers\u227\'3fo da depend\u234\'3fncia, dependa de abstra\u231\'3f\u245\'3fes e n\u227\'3fo de implementa\u231\'3f\u245\'3fes
}
\par\pard\plain
\slmult0\ltrpar\li200
{\fs20
GoF
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
Comportamental
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Atribui\u231\'3f\u227\'3fo de responsabilidade entre os objetos
}
\par\pard\plain
\slmult0\cbpat5\ltrpar\li800
{\cb5\fs20
Chain of Responsability
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
passa solicita\u231\'3f\u245\'3fes em uma cadeia de manipuladores.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Command
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
transforma uma solicita\u231\'3f\u227\'3fo em um objeto independente que cont\u233\'3fm todas as informa\u231\'3f\u245\'3fes sobre a solicita\u231\'3f\u227\'3fo
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Iterator
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
percorre elementos sem expor a representa\u231\'3f\u227\'3fo
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Interpreter
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
envolve a implementa\u231\'3f\u227\'3fo de uma interface de experss\u227\'3fo que informa  para interpretar um contexto espec\u237\'3ffico
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Mediator
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
reduz depend\u234\'3fncias ca\u243\'3fticas entre objeticos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Memento
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
salva e restaura o estado anterior sem expor detalhes da implementa\u231\'3f\u227\'3fo
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Observer
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
define mecanismos de assinatura para notificar objetos sobre eventos.
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
State
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
permite que um objeto altere o comportamento quando seu estado interno for alterado
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Strategy
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
define uma fam\u237\'3flia de algoritmos e coloca em classes separadas para tornar seus objetos intercambi\u225\'3fveis
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Template Method
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
define um esqueleto de algoritmo na superclasse, mas permite que as superclasses substituam etapas espec\u237\'3fficas sem alterar a estrutura
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Visitor
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
separa os algoritmos dos objetos nos quais eles operam
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
Criacional
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Cria\u231\'3f\u227\'3fo e reutiliza\u231\'3f\u227\'3fo de objetos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Factory
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
interface para criar objetos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Builder
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
contr\u243\'3fi objetos complexos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Abstract Factory
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
produz objetos sem especificar suas classes concretas
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Propotype
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
copia objetos existentes sem criar depend\u234\'3fncia
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Singleton
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
garante uma \u250\'3fnica inst\u226\'3fncia
}
\par\pard\plain
\slmult0\cbpat4\ltrpar\li400
{\cb4\fs20
Estrutural
}
\par\pard\plain
\slmult0\ltrpar\li600
{\fs20
Montam os objetos e flexibilizam as classes
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Adapter
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
colabora\u231\'3f\u227\'3fo entre objetos com interfaces incompat\u237\'3fveis
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Facade
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
fornece interface simples para um subsistema complexo
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Bridge
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
divide grandes classes em duas hierarquias separadas (abstra\u231\'3f\u227\'3fo e implementa\u231\'3f\u227\'3fo)
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Decorator
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
anexa novos comportamentos aos objetos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Flyweight
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
ajusta mais objetos \u225\'3f mem\u243\'3fria RAM, compartilhando partes comuns do estado entre v\u225\'3frios objetos
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Composite
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
comp\u245\'3fes objetos em estruturas de \u225\'3frvores para trabalhar indivualmente com cada um
}
\par\pard\plain
\slmult0\ltrpar\li800
{\fs20
Proxy
}
\par\pard\plain
\slmult0\ltrpar\li1000
{\fs20
fornece um subtituto para outro objeto
}
\par\pard\plain
\slmult0\ltrpar\li200
{\fs20
T\u225\'3ftico
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
decis\u245\'3fes de design que melhoram o c\u243\'3fdigo. o GoF \u233\'3f um tipo t\u225\'3ftico
}
\par\pard\plain
\slmult0\ltrpar\li200
{\fs20
Estrat\u233\'3fgico
}
\par\pard\plain
\slmult0\ltrpar\li400
{\fs20
define qual algoritmo usar em tempo de execu\u231\'3f\u227\'3fo
}
\par\pard\plain
}